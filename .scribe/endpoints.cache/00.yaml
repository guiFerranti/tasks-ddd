## Autogenerated by Scribe. DO NOT MODIFY.

name: Autenticação
description: |-

  Endpoints para gerenciar autenticação de usuários (login/logout).
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      groupName: Autenticação
      groupDescription: |-

        Endpoints para gerenciar autenticação de usuários (login/logout).
      subgroup: ''
      subgroupDescription: ''
      title: 'Login de Usuário'
      description: 'Autentica um usuário e retorna um token JWT.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Email do usuário.'
        required: true
        example: usuario@exemplo.com
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      password:
        name: password
        description: 'Senha (mínimo 6 caracteres).'
        required: true
        example: senha123
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      email: usuario@exemplo.com
      password: senha123
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...",
            "refresh_token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "error": "Credenciais inválidas"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 422
        content: |-
          {
            "errors": {
              "email": ["O campo email é obrigatório"],
              "password": ["O campo password é obrigatório"]
            }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/auth/logout
    metadata:
      groupName: Autenticação
      groupDescription: |-

        Endpoints para gerenciar autenticação de usuários (login/logout).
      subgroup: ''
      subgroupDescription: ''
      title: 'Logout de Usuário'
      description: 'Invalida o token JWT do usuário atual.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {token}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Logout realizado com sucesso"
          }
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: |-
          {
            "error": "Token inválido"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
